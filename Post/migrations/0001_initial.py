# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2017-05-21 05:51
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import localflavor.us.models
import stdimage.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('account', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Broadcast_Email',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=200)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('html_content', models.TextField(default=None, null=True)),
                ('text_content', models.TextField(default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Concert',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=32)),
                ('street_address', models.CharField(max_length=200)),
                ('city', models.CharField(max_length=64)),
                ('state', localflavor.us.models.USStateField(max_length=2)),
                ('zip_code', models.CharField(max_length=5)),
                ('date', models.DateField(blank=True, help_text='MM/DD/YYYY', null=True)),
                ('time', models.TimeField(blank=True, help_text='24 hour clock', null=True)),
                ('description', models.TextField()),
                ('ticket_link', models.URLField()),
                ('starting_price', models.IntegerField(null=True)),
                ('image', stdimage.models.StdImageField(blank=True, null=True, upload_to='Post/images')),
                ('posted_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ConcertComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(max_length=200)),
                ('created_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('approved_comment', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('concert', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='concertcomments', to='Post.Concert')),
            ],
        ),
        migrations.CreateModel(
            name='EventComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(max_length=200)),
                ('created_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('approved_comment', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('1', 'Music'), ('3', 'Fundraisers'), ('13', 'Comedy'), ('14', 'Poetry'), ('4', 'Dance'), ('19', 'Health/Wellbeing'), ('5', 'Theatre'), ('8', 'Art'), ('12', 'Films'), ('6', 'Performing Arts'), ('2', 'Sports'), ('21', 'Political'), ('18', 'Debate'), ('20', 'Gaming'), ('17', 'Lecture'), ('10', 'Academic'), ('11', 'Professional'), ('15', 'Other')], max_length=25, null=True)),
                ('title', models.CharField(max_length=32)),
                ('street_address', models.CharField(max_length=200)),
                ('city', models.CharField(max_length=64)),
                ('state', localflavor.us.models.USStateField(max_length=2)),
                ('zip_code', models.CharField(max_length=5)),
                ('date', models.DateField(help_text='MM/DD/YYYY', null=True)),
                ('end_date', models.DateField(blank=True, help_text='not requiered', null=True)),
                ('time', models.TimeField(help_text='24 hour clock', null=True)),
                ('description', models.TextField()),
                ('price', models.IntegerField(null=True)),
                ('ticket_link', models.URLField(blank=True, null=True)),
                ('image', stdimage.models.StdImageField(blank=True, null=True, upload_to='Post/images')),
                ('posted_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('draft', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('attending', models.ManyToManyField(blank=True, related_name='attending', to='account.Account')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-posted_date'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry', models.TextField(max_length=200, null=True, verbose_name='')),
                ('posted_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'questions',
            },
        ),
        migrations.CreateModel(
            name='QuestionComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(max_length=200)),
                ('created_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('approved_comment', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questioncomments', to='Post.Question')),
            ],
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('email', models.CharField(max_length=40)),
                ('description', models.TextField(null=True)),
                ('date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='eventcomment',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='Post.Post'),
        ),
    ]
